name: Helm Chart Deploy
description: Pipeline for helm chart deployment.

inputs:
  helm_chart:
    description: Helm chart path
    required: true
  values_path:
    description: Path to directory with values
    required: true
  release_name:
    description: Release name
    required: false
    default: app
  namespace:
    description: Release namespace
    required: true
  kubeconfig_b64:
    description: Base64 encoded kubeconfig
    required: true
  gpg_key_b64:
    description: Base64 encoded private key
    required: true
  values_pattern:
    description: Wildcard for values files
    required: false
    default: "*values.yaml"
  secrets_pattern:
    description: Wildcard for secrets files
    required: false
    default: "*sops.yaml"

runs:
  using: composite
  steps:
    - name: Download kubectl, sops. helm-secrets plugin
      shell: bash
      run: |-
        curl -sLO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

        curl -sLo sops https://github.com/mozilla/sops/releases/download/v3.7.2/sops-v3.7.2.linux.amd64
        sudo mv ./sops /usr/local/bin/sops
        chmod +x /usr/local/bin/sops

        helm plugin install https://github.com/jkroepke/helm-secrets --version v4.6.0

        mkdir ~/.kube
        echo "${{ inputs.kubeconfig_b64 }}" | base64 -d > ~/.kube/config
    - name: Upgrade Helm Chart
      shell: bash
      run: |-
        values_dir=$(realpath ${{ inputs.values_path }})
        HLM_VALUES=($(find "${values_dir}" -maxdepth 1 -type f -iname "${{ inputs.values_pattern }}"))
        HLM_SECRETS=($(find "${values_dir}" -maxdepth 1 -type f -iname "${{ inputs.secrets_pattern }}"))
        command="helm upgrade --install --wait --wait-for-jobs --timeout 10m --namespace ${{ inputs.namespace }} --create-namespace"
        for value in "${HLM_VALUES[@]}"; do
          command="$(printf '%s --values %s' "$command" "$value")"
        done
        for value in "${HLM_SECRETS[@]}"; do
          command="$(printf '%s --values secrets://%s' "$command" "$value")"
        done
        for i in $(find "${values_dir}" -maxdepth 1 -type f -iname '*.env' | sort); do
          eval $(sed -e 's/^/export /' "${i}")
        done
        command="$(printf '%s %s %s' "$command" "${{ inputs.release_name }}" "${{ inputs.helm_chart }}")"
        echo "$command"
        eval "$command"
